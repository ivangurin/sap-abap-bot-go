name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "stable"

      - name: Linter
        run: make lint

      - name: Test
        run: make test

  build_and_push:
    needs: test

    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to the registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.REGISTRY }}
          username: ${{ github.actor}}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.REGISTRY }}/${{ vars.IMAGE_NAME }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ vars.REGISTRY }}/${{ vars.IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}

      # - name: Generate artifact attestation
      #   uses: actions/attest-build-provenance@v2
      #   with:
      #     subject-name: ${{ vars.REGISTRY }}/${{ vars.IMAGE_NAME}}
      #     subject-digest: ${{ steps.push.outputs.digest }}
      #     push-to-registry: true

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ vars.SERVER_HOST }}
          username: ${{ vars.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ vars.SERVER_PORT }}
          script: |
            export SAP_ABAP_BOT_TOKEN=${{ secrets.SAP_ABAP_BOT_TOKEN }}
            export SAP_ABAP_BOT_ADMIN_USER_IDS=${{ vars.SAP_ABAP_BOT_ADMIN_USER_IDS }}
            export SAP_ABAP_BOT_ALLOWED_CHAT_IDS=${{ vars.SAP_ABAP_BOT_ALLOWED_CHAT_IDS }}
            export SAP_ABAP_BOT_GITHUB_TOKEN=${{ secrets.SAP_ABAP_BOT_GITHUB_TOKEN }}
            export SAP_ABAP_BOT_DEBUG=${{ vars.SAP_ABAP_BOT_DEBUG }}
            REPO_DIR="sap-abap-bot-go"
            REPO_URL="https://github.com/ivangurin/sap-abap-bot-go.git"
            if [ ! -d "$REPO_DIR" ]; then
                git clone "$REPO_URL"
                cd "$REPO_DIR"
            else
                cd "$REPO_DIR"
                git pull
            fi
            make pull-and-run
